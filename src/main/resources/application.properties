spring.profiles.active=${ENV:local}

test.message=${MESSAGE:NO}
auto-invest.order.cron=${ORDER_CRON:0 0 8 * * *}
auto-invest.cron.time-zone=${TIME_ZONE:GMT+9:00}

binance.endpoint=${BINANCE_ENDPOINT:https://api.binance.com}
webhook.endpoint=${WEBHOOK_ENDPOINT:https://discord.com/api/webhooks}
webhook.target-id=${WEBHOOK_ID:844183408196190210/JFG_huurfO6AkddEBCobHai8mV3D6ODemaL4an4N9IpqG1Xm2EJ_JKmLOIYtbQ9a7Diq}
webhook.wait-time=${WEBHOOK_WAIT_TIME:300}

management.endpoints.web.exposure.include=health

# https://attacomsian.com/blog/accessing-data-spring-data-jpa-mysql
# TODO: Research on hibernate

# MySQL connection properties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}
# if facing not allow to retrieve public key, add allowPublicKeyRetrieval
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:13306/crypto-db?useSSL=false&allowPublicKeyRetrieval=true}

# Log JPA queries
# Comment this in production
spring.jpa.show-sql=${SHOW_SQL:true}

# Drop and create new tables (create, create-drop, validate, update)
# Only for testing purpose - comment this in production
spring.jpa.hibernate.ddl-auto=create-drop

spring.cloud.compatibility-verifier.enabled=false

# Hibernate SQL dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect